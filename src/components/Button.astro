---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";
import { twMerge } from "tailwind-merge";

const button = cva(
  "flex items-center gap-2 max-w-fit rounded transition-all focus:outline-none focus-visible:ring-2 ring-offset-4 border-transparent text-theme-base ring-offset-theme-base",
  {
    variants: {
      intent: {
        primary: ["bg-theme-text", "hover:bg-theme-text/90", "ring-theme-text"],
        accent: [
          "bg-theme-accent",
          "hover:bg-theme-accent/90",
          "ring-theme-accent",
        ],
        checkbox: [
          "size-6 border-2 border-theme-accent rounded-md grid place-items-center text-theme-base peer-checked:bg-theme-accent peer-focus-visible:ring-2 ring-theme-accent ring-offset-2 ring-offset-theme-base",
        ],
      },
      size: {
        small: ["text-sm", "py-1", "px-2"],
        medium: ["text-base", "py-2", "px-4"],
        large: ["text-lg", "py-3", "px-5"],
        square: ["aspect-square"],
      },
    },
  }
);

export interface Props
  extends HTMLAttributes<"button">,
    VariantProps<typeof button> {
  classes?: string;
}

const { intent = "primary", size = "medium", classes, ...rest } = Astro.props;
---

<button class:list={twMerge([button({ intent, size }), classes])} {...rest}>
  <slot />
</button>
