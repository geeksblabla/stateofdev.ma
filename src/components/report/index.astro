---
export const prerender = true;

import Context from "@astro-utils/context/Context.astro";
import Tabs from "./tabs.astro";
import TabItem from "./tab-item.astro";
import Toc from "./toc.astro";
import Hero from "./hero.astro";

import type { Year } from "@/components/chart/data";

import Chart from "@/components/chart/chart.astro";

export interface Props {
  year: Year;
}
const { year = "2023" } = Astro.props;
const allDocs = await Astro.glob(`../../../results/**/*.mdx`);
const docs = allDocs
  .filter((file) => file.file.includes(`${year}/sections`))
  .sort((a, b) => a.frontmatter.position - b.frontmatter.position);

const headings = docs
  .map((doc) => doc.getHeadings())
  .flat()
  .filter((heading) => heading.depth <= 3);
const customComponents = {
  Chart,
  TabItem,
  Tabs
};
---

<div>
  <Hero year={year} />
</div>
<div class="lg:mx-auto flex flex-row max-w-screen-xl md:pt-10 pt-0">
  <Context year={year} test="test">
    <article class="flex-1 pt-8 w-full px-3">
      <div
        class="prose lg:pr-16 max-w-none prose-img:rounded-xl prose-a:text-emerald-600
            prose-h1:font-bold prose-h1:text-xl
            prose-p:text-justify
            prose-headings:underline underline-offset-2"
      >
        {
          docs.map((doc) => {
            return (
              <div class="pb-16 md:pb-32">
                {<doc.Content components={customComponents} />}
              </div>
            );
          })
        }
      </div>
    </article>
    <Toc items={headings} />
  </Context>
</div>

<!-- New section for playground demonstration -->
<div class="bg-emerald-100/25 py-16 my-8">
  <div class="max-w-screen-xl mx-auto px-4">
    <h2 class="text-xl font-bold mb-8 text-center">
      Try The Interactive Playground
    </h2>
    <p class="text-center mb-8 max-w-2xl mx-auto">
      Explore and experiment with our data using our interactive playground.
      Customize charts, filter data, and gain insights on your own!
    </p>
    <div class="flex justify-center">
      <a
        href="/playground"
        class="bg-emerald-600 text-white px-6 py-3 rounded-lg hover:bg-emerald-700 transition-colors"
      >
        Launch Playground
      </a>
    </div>
  </div>
</div>
